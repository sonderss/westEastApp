<template>
	<view>
		<view class="line"></view>
		<view class="content">
			<view style="padding: 14upx 0;" v-for="(item,index) in list" :key="index">
			<checkbox-group @change="checkboxChange($event,index)">			
					<view  class="goods_flex">
						<label class="goods_flex">
							<checkbox v-if="flag" :checked="shop_select_all[index]" color="#d81e06" :value="'v'+index" />
							<view class="ximg" :style="{'background':'url('+item.img+') center center/cover no-repeat'}"></view>
						</label>
						<view class="goods_attribute">
							<view class="goods_title">{{item.title}}</view>			
							<view class="cancel">
								<text class="goods_price">￥{{item.price}}</text>
								<button v-if="flag" size="mini" type="warn" @tap="cancel_collect(index)">取消收藏</button>
							</view>
						</view>
					</view>									
			</checkbox-group>
			</view>
		</view>
		<view class="bottom" v-if="flag">
			<view class="footer">
				<checkbox-group class="all_change"  @change="total_all_checkboxChange($event)" >
					<label class="select_all">
						<checkbox color="#d81e06" :checked="total_all_select" :value="isAll"/>
						<text>全选</text>
					</label>
				</checkbox-group>
				<view class="footer_cancel" @tap="all_cancel">
					取消收藏
				</view>
			</view>
		</view>
		
	</view>
</template>

<script>
	export default{
		data(){
			return{
				list:this.$store.state.collections,
				flag:false,
				shop_select_all:[],
				isAll:'yes'
			}
		},
		methods:{
			onNavigationBarButtonTap(){
				if(this.list.length){
					this.flag=true
				}
			},
			checkboxChange(e,num){
				if(this.shop_select_all[num]==false){
					this.$set(this.shop_select_all,num,true)
				}else{
					this.$set(this.shop_select_all,num,false)
					this.isAll="yes"
				}				
			},
			total_all_checkboxChange(e){
				if(e.detail.value[0]=="yes"){
					console.log("111111111111111")
					for(var i=0;i<this.shop_select_all.length;i++){
						this.$set(this.shop_select_all,i,true)
					}
					this.isAll="no"
				}else{
					console.log("333333333333333")
					for(var i=0;i<this.shop_select_all.length;i++){
						this.$set(this.shop_select_all,i,false)
					}
					this.isAll="yes"
				}
				
			},
			cancel_collect(index){
				this.list.splice(index,1)
				this.shop_select_all.splice(index,1)
				if(this.list.length==0){
					this.flag=false
				}
			},
			all_cancel(){
				console.log(this.list.length)
				let num=this.list.length;
				for(var i=0;i<num;i++){
					this.list.splice(0,1)
				}
				this.shop_select_all=[]
				this.flag=false
			}
		},
		created(){
			let _arr=[]
			for(let i=0;i<this.list.length;i++){
				let _select=true
				if(!this.list[i].checked){
					_select=false
				}
				this.shop_select_all.push(_select)
			}
		},
		computed:{
			total_all_select(){
				let _true=true
				if(this.shop_select_all.length){
					for(let i=0;i<this.shop_select_all.length;i++){
						if(!this.shop_select_all[i]){
							_true=false;
						}
					}				
					return _true;
				}else{
					return !_true;
				}				
			}
		}
	}
</script>

<style lang="scss" scoped>
	@import 'collect.scss'
</style>
