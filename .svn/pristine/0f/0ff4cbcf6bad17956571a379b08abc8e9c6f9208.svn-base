<template>
	<view class="content">
		<view style="height:100upx;">
			<view  :class="topFixed?'select-tab-fixed-top':'select-tab'" style="height: 100upx;">
				<view class="select-tab-item"  v-for="(item,index) in titleList" :key="index" @tap="showMenuClick(index)" :style="{'width': itemWidth,'color':selectedIndex===index?'#C17B7D':'#3E3E3E'}">
					<text>{{index==2&&item.title!='筛选'&&menuList.length!=3?item.title+'...':(item.iscity?cityname:item.title)}}</text>
					<text class="arrows sl-font" :class="statusList[index].isActive?up:down"></text>
				</view>
			</view>
		</view>

		<popup-layer   ref="popupRef" :direction="'bottom'" @close="close" :isTransNav="isTransNav" :navHeight="navHeight"
		 :tabHeight="tabHeight">
			<block v-if="menuList[1].ishook==1">
				<dl-filter-view @colse='colse_cjq' :independence="independence" :themeColor="themeColor" :menuList.sync="menuListTemp"
				 ref="slFilterView" @confirm="filterResult" :cityname='cityname'></dl-filter-view>
			</block>
			<block v-if="menuList[1].ishook==2">				
				 <sl-filter-view  :independence="independence" :themeColor="themeColor" :menuList.sync="menuListTemp"
				  ref="slFilterView" @confirm="filterResult"></sl-filter-view>
			</block>
			<block v-if="menuList[1].ishook==3">
				 <bl-filter-view  :independence="independence" :themeColor="themeColor" :menuList.sync="menuListTemp"
				  ref="slFilterView" @confirm="filterResult" :cityname='cityname'></bl-filter-view>
			</block>	
		</popup-layer>

	</view>

</template>

<script>
	import { mapState } from 'vuex';
	import popupLayer from './popup-layer.vue';
	import slFilterView from './filter-view.vue';
	import dlFilterView from './design-filter.vue';
	import blFilterView from './bulid-filter.vue';
	export default {
		components: {
			popupLayer,
			slFilterView,
			dlFilterView,
			blFilterView
		},
		props: {
			menuList: {
				type: Array,
				default () {
					return []
				}
			},
			themeColor: {
				type: String,
				default () {
					return '#000000'
				}
			},
			independence: {
				type: Boolean,
				default: false
			},
			isTransNav: {
				type: Boolean,
				default: false
			},
			navHeight: {
				type: Number,
				default: 0
			},
			topFixed: {
				type: Boolean,
				default: false
			},
			cityname:{
				type: String,
			}
		},
		watch:{
			// cityname(){				
			// 	console.log(123456)
			// 	this.$refs.slFilterView.menuTabClick(0);
			// 	this.$refs.slFilterView.sureClick()
			// }
		},
		computed: {
			itemWidth() {
				return 'calc(100%/2)'
			},
			menuListTemp: {
				get() {
					return this.getMenuListTemp();
				},
				set(newObj) {
					return newObj;
				}
			}
			// citynames () {
			// 	return this.cityname
			// }
			// ...mapState(['currentCity'])
		},
		created: function() {
			let arr = [];
			let titleArr = [];
			let r = {};
			if(this.menuList.length==3){				
				for (let i = 0; i < this.menuList.length; i++) {
					arr.push({
						'isActive': false
					});
					r[this.menuList[i].key] = this.menuList[i].title;				
					if(this.menuList[i].isjump){
						titleArr.push({
							'title': this.menuList[i].title,
							'key': this.menuList[i].key,
							'iscity':true
						})
					}else{
						titleArr.push({
							'title': this.menuList[i].title,
							'key': this.menuList[i].key
						})
					}								
				}
			}else{
				for (let i = 0; i < this.menuList.length-1; i++) {
					arr.push({
						'isActive': false
					});
					r[this.menuList[i].key] = this.menuList[i].title;				
					if(this.menuList[i].isjump){
						titleArr.push({
							'title': this.menuList[i].title,
							'key': this.menuList[i].key,
							'iscity':true
						})
					}else{
						titleArr.push({
							'title': this.menuList[i].title,
							'key': this.menuList[i].key
						})
					}								
				}
			}	
			this.statusList = arr;
			this.titleList = titleArr;
			this.tempTitleObj = r;
			// console.log(this.tempTitleObj,this.titleList)
		},
		data() {
			return {
				down: 'sl-down',
				up: 'sl-up',
				tabHeight: 50,
				statusList: [],
				selectedIndex: '0',
				titleList: [],
				tempTitleObj: {}
			};
		},
		methods: {
			refursh(){
				this.$refs.slFilterView.menuTabClick(0);
				this.$refs.slFilterView.sureClick()
			},
			getMenuListTemp() {
				let arr = this.menuList;
				for (let i = 0; i < arr.length; i++) {
					let item = arr[i];
					for (let j = 0; j < item.detailList.length; j++) {
						let d_item = item.detailList[j];
						if (j == 0) {
							d_item.isSelected = true
						} else {
							d_item.isSelected = false
						}
					}
				}
				return arr;
			},
			showMenuClick(index) {
				this.selectedIndex = index;
				if(this.menuList[index].isjump){
					this.$refs.popupRef.close();
					uni.navigateTo({
						url:'/pages/choosecity/choosecity'
					})				 
				}else{
					if (this.statusList[index].isActive == true) {
						this.$refs.popupRef.close();
						this.statusList[index].isActive = false
					} else {
						this.menuTabClick(index);
						this.$refs.popupRef.show()
					}
				}
			},
			menuTabClick(index) {
				this.$refs.slFilterView.menuTabClick(index);
				for (let i = 0; i < this.statusList.length; i++) {
					if (index == i) {
						this.statusList[i].isActive = true;
					} else {
						this.statusList[i].isActive = false;
					}
				}
			},
			filterResult(obj) {
				let val = obj.result;
				let titlesObj = obj.titles;
				// 处理选项映射到菜单title
 				for (let key in titlesObj) {
					if (!Array.isArray(titlesObj[key])) {
						this.tempTitleObj[key] = titlesObj[key];
					}
				}
				for (let key in this.tempTitleObj) {
					for (let i = 0; i < this.titleList.length; i++) {
						if (this.titleList[i].key == key) {
							this.titleList[i].title = this.tempTitleObj[key];
						}
					}
				}
				this.$refs.popupRef.close()
				if (obj.isReset) {
					this.$emit("result", val)
					console.log(val)
				} else{
					this.$emit("result", val)
					console.log(val)
				}	

			},
			close() {
				for (let i = 0; i < this.statusList.length; i++) {
					this.statusList[i].isActive = false;
				}
			},
			//重置关闭
			colse_cjq(e){
				if(!e){
					this.$refs.popupRef.close();
				}
			}
		}
	}
</script>

<style scoped lang="scss">
	@import 'iconfont/iconfont.css';
	.select-tab {
		border-bottom: #F7F7F7 1px solid;
		background-color: #FFFFFF;
		display: flex;
		width: 100%;
	}

	.select-tab-fixed-top {
		border-bottom: #F7F7F7 1px solid;
		background-color: #FFFFFF;
		display: flex;
		width: 100%;
		position: fixed;
		/* #ifdef H5 */
		top: 88upx;
		/* #endif */
		/* #ifndef H5 */
		top: 0;
		/* #endif */
	}

	.arrows {
		margin-left: 10upx;
	}

	.select-tab .select-tab-item,
	.select-tab-fixed-top .select-tab-item {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.select-tab .select-tab-item text,
	.select-tab-fixed-top .select-tab-item text {
		font-size: 26upx
	}
</style>
